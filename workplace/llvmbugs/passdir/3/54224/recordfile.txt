----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 85.4142050743103
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 86.03764176368713
----------
mutation rule: repIfCond;1
mutate pos: 685
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 96.32764840126038
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.254223585128784
succeed? True
instantReward: 5.2872266205044585e-08
EndTime: 144.38304829597473
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 144.87916207313538
----------
mutation rule: addQualifier;volatile
mutate pos: 848
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 848
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 145.53366494178772
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.74599242210388
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 194.01151990890503
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 194.03220987319946
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.71400213241577
succeed? True
instantReward: 0.0
EndTime: 241.53299188613892
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 242.18328619003296
----------
mutation rule: TurnConstantVar;
mutate pos: 749
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   749
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.78442120552063
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 289.7013192176819
----------
mutation rule: repIntConstant;-1
mutate pos: 749
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 749
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.609108209609985
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 340.0551087856293
----------
mutation rule: addWhile;
mutate pos: 896
mutate cmd: ./exefile/addWhile-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.31138229370117
succeed? True
instantReward: 1.0083346027192446e-07
EndTime: 388.3653213977814
----------
mutation rule: moveStmt;
mutate pos: 896
mutate cmd: ./exefile/moveStmt-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 398.67566990852356
----------
mutation rule: addLoopIf;
mutate pos: 662
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.41305184364319
succeed? True
instantReward: 1.6885616831582856e-05
EndTime: 447.204886674881
----------
mutation rule: addRepModifier;long
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.94633507728577
succeed? True
instantReward: 0.0
EndTime: 494.9686527252197
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.20067095756531
succeed? True
instantReward: 7.12806119328044e-07
EndTime: 544.0099856853485
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 544.527245759964
----------
mutation rule: add2If;
mutate pos: 837
mutate cmd: ./exefile/add2If-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 544.7376887798309
----------
mutation rule: addWhile;
mutate pos: 885
mutate cmd: ./exefile/addWhile-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 547.8881318569183
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 548.574604511261
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 548.5922341346741
----------
mutation rule: moveStmt;
mutate pos: 628
mutate cmd: ./exefile/moveStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 558.9080257415771
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 558.9906752109528
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 559.5400381088257
----------
mutation rule: addVarDecl;
mutate pos: 598
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   598
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 560.2193734645844
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 560.523010969162
----------
mutation rule: repLoopCond;!
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.73219108581543
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 608.0240712165833
----------
mutation rule: repIntConstant;+1
mutate pos: 749
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 749
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.840269804000854
succeed? True
instantReward: 0.0
EndTime: 655.709166765213
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 656.0161929130554
----------
mutation rule: addGoto;
mutate pos: 685
mutate cmd: ./exefile/addGoto-mul ./main.c --   685 685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 656.3301784992218
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 656.4067401885986
----------
mutation rule: TurnConstantVar;
mutate pos: 697
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.561856269836426
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 704.7192053794861
----------
mutation rule: repVarSameScope;
mutate pos: 693
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   693
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.94147229194641
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 755.5545363426208
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.62215447425842
succeed? True
instantReward: 0.0
EndTime: 803.998831987381
----------
mutation rule: addIf;
mutate pos: 681
mutate cmd: ./exefile/addIf-mul ./main.c --   681
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 804.5145020484924
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.15491819381714
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 851.4337151050568
----------
mutation rule: add2Loop;
mutate pos: 837
mutate cmd: ./exefile/add2Loop-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 851.6461989879608
----------
mutation rule: addWhile;
mutate pos: 837
mutate cmd: ./exefile/addWhile-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 851.8640809059143
----------
mutation rule: addIf;
mutate pos: 753
mutate cmd: ./exefile/addIf-mul ./main.c --   753
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 852.4076888561249
----------
mutation rule: addGoto;
mutate pos: 841
mutate cmd: ./exefile/addGoto-mul ./main.c --   841 681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 862.7456872463226
----------
mutation rule: dupStmt;
mutate pos: 907
mutate cmd: ./exefile/dupStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 863.0948996543884
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.8614342212677
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 910.6827914714813
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.82926321029663
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 959.4716346263885
----------
mutation rule: addWhile;
mutate pos: 753
mutate cmd: ./exefile/addWhile-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.52600979804993
succeed? True
instantReward: 0.0
EndTime: 1008.0469253063202
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1008.1034140586853
----------
mutation rule: addGoto;
mutate pos: 907
mutate cmd: ./exefile/addGoto-mul ./main.c --   907 724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1018.4653971195221
----------
mutation rule: addQualifier;volatile
mutate pos: 585
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 585
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.29301452636719
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1066.563550233841
----------
mutation rule: repBinaryOp;-,/
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.834765672683716
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1114.1945185661316
----------
mutation rule: addVarDecl;
mutate pos: 871
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   871
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.32884383201599
succeed? True
instantReward: 0.0
EndTime: 1161.3801474571228
----------
mutation rule: repLoopCond;!
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1161.429459810257
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.207613468170166
succeed? True
instantReward: 0.0
EndTime: 1209.50088596344
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1210.0656323432922
----------
mutation rule: addQualifier;const
mutate pos: 585
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 585
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1210.4219105243683
----------
mutation rule: repIntConstant;-1
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.46977615356445
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1258.6791186332703
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1259.2563562393188
----------
mutation rule: addLoopIf;
mutate pos: 680
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.63991737365723
succeed? True
instantReward: 0.0
EndTime: 1307.1663863658905
----------
mutation rule: add2Loop;
mutate pos: 837
mutate cmd: ./exefile/add2Loop-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1307.3847448825836
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 642
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 642
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.838117599487305
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1355.1846568584442
----------
mutation rule: delStmt;
mutate pos: 681
mutate cmd: ./exefile/delStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1365.5579788684845
----------
mutation rule: addVarDecl;
mutate pos: 907
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   907
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.363016843795776
succeed? True
instantReward: 0.0
EndTime: 1412.7764496803284
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 642
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 642
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1412.8364112377167
----------
mutation rule: addGoto;
mutate pos: 754
mutate cmd: ./exefile/addGoto-mul ./main.c --   754 837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1412.8566982746124
----------
mutation rule: addVarDecl;
mutate pos: 871
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   871
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1412.9510447978973
----------
mutation rule: addIf;
mutate pos: 753
mutate cmd: ./exefile/addIf-mul ./main.c --   753
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1413.5360579490662
----------
mutation rule: addRepModifier;long
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.05322504043579
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1462.3994562625885
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 868
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 868
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.42289662361145
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1512.6719288825989
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1512.7452175617218
----------
mutation rule: delStmt;
mutate pos: 681
mutate cmd: ./exefile/delStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1523.1613223552704
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.231467723846436
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1572.1582152843475
----------
mutation rule: repLoopCond;1
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1572.1785776615143
----------
mutation rule: repIntConstant;*0
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1572.2201075553894
----------
mutation rule: dupStmt;
mutate pos: 685
mutate cmd: ./exefile/dupStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.59169316291809
succeed? True
instantReward: 0.0
EndTime: 1620.631394147873
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1620.7338027954102
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.94770884513855
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1670.440937280655
----------
mutation rule: dupStmt;
mutate pos: 628
mutate cmd: ./exefile/dupStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1670.8109085559845
----------
mutation rule: addRepModifier;short
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.177064657211304
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1717.8354251384735
----------
mutation rule: addRepModifier;short
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1717.900824546814
----------
mutation rule: delStmt;
mutate pos: 841
mutate cmd: ./exefile/delStmt-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1717.91930103302
----------
mutation rule: delStmt;
mutate pos: 837
mutate cmd: ./exefile/delStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1717.9403493404388
----------
mutation rule: delIf;
mutate pos: 899
mutate cmd: ./exefile/delIf-mul ./main.c --   899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.74122214317322
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1765.488737821579
----------
mutation rule: repIfCond;1
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1775.904932975769
----------
mutation rule: delIf;
mutate pos: 841
mutate cmd: ./exefile/delIf-mul ./main.c --   841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1775.9329175949097
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.51768970489502
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1824.4633784294128
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1824.600583076477
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.575353384017944
succeed? True
instantReward: 0.0
EndTime: 1872.0723180770874
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1872.7168202400208
----------
mutation rule: repBinaryOp;-,/
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1872.782256603241
----------
mutation rule: repIfCond;1
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1883.176810503006
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1883.3393816947937
----------
mutation rule: delStmt;
mutate pos: 841
mutate cmd: ./exefile/delStmt-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1883.359611272812
----------
mutation rule: addLoopIf;
mutate pos: 681
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.802008628845215
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1931.380113363266
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1931.5205793380737
----------
mutation rule: repIntConstant;*-1
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1941.9315264225006
----------
mutation rule: add2Loop;
mutate pos: 685
mutate cmd: ./exefile/add2Loop-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.0951726436615
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 1990.09436917305
----------
mutation rule: moveStmt;
mutate pos: 662
mutate cmd: ./exefile/moveStmt-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.15030074119568
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 2038.2176201343536
----------
mutation rule: delStmt;
mutate pos: 885
mutate cmd: ./exefile/delStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.84000062942505
succeed? True
instantReward: 1.698744627720115e-05
EndTime: 2085.907619714737
----------
mutation rule: repIntConstant;*0
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2096.347441673279
----------
mutation rule: addLoopIf;
mutate pos: 685
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2107.1938288211823
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 718
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 718
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2107.6251168251038
----------
mutation rule: add2Loop;
mutate pos: 907
mutate cmd: ./exefile/add2Loop-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.59577989578247
succeed? True
instantReward: 2.99149997334369e-07
EndTime: 2156.273290157318
----------
mutation rule: TurnConstantVar;
mutate pos: 676
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.593578815460205
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2204.731822013855
----------
mutation rule: addGoto;
mutate pos: 885
mutate cmd: ./exefile/addGoto-mul ./main.c --   885 841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2215.172280550003
----------
mutation rule: addIf;
mutate pos: 680
mutate cmd: ./exefile/addIf-mul ./main.c --   680
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2215.8188750743866
----------
mutation rule: addWhile;
mutate pos: 753
mutate cmd: ./exefile/addWhile-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.75330352783203
succeed? True
instantReward: 0.0
EndTime: 2263.6584470272064
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2264.302703857422
----------
mutation rule: addQualifier;volatile
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.66693139076233
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2311.852917432785
----------
mutation rule: delStmt;
mutate pos: 680
mutate cmd: ./exefile/delStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2322.284942626953
----------
mutation rule: addGoto;
mutate pos: 837
mutate cmd: ./exefile/addGoto-mul ./main.c --   837 758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2322.3112490177155
----------
mutation rule: moveStmt;
mutate pos: 896
mutate cmd: ./exefile/moveStmt-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2332.809317111969
----------
mutation rule: addQualifier;const
mutate pos: 585
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 585
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2333.243415594101
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2333.3655042648315
----------
mutation rule: delStmt;
mutate pos: 837
mutate cmd: ./exefile/delStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2333.3902328014374
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2333.680426836014
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.561787128448486
succeed? True
instantReward: 0.0
EndTime: 2381.148785352707
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2381.3235371112823
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2381.9821281433105
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2382.09797000885
----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.01762652397156
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2429.96693611145
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2430.3837909698486
----------
mutation rule: TurnConstantVar;
mutate pos: 766
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.633031368255615
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2478.856678247452
----------
mutation rule: add2If;
mutate pos: 680
mutate cmd: ./exefile/add2If-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.20708250999451
succeed? True
instantReward: 0.0
EndTime: 2527.2013685703278
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.870351791381836
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2575.8463015556335
----------
mutation rule: addGoto;
mutate pos: 662
mutate cmd: ./exefile/addGoto-mul ./main.c --   662 754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2586.3051433563232
----------
mutation rule: addGoto;
mutate pos: 724
mutate cmd: ./exefile/addGoto-mul ./main.c --   724 758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2596.781963825226
----------
mutation rule: repVarSameScope;
mutate pos: 889
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   889
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2596.807250022888
----------
mutation rule: addIf;
mutate pos: 753
mutate cmd: ./exefile/addIf-mul ./main.c --   753
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2597.4949238300323
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2597.549916267395
----------
mutation rule: add2Loop;
mutate pos: 841
mutate cmd: ./exefile/add2Loop-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.67994689941406
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2645.3507285118103
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 701
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 701
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.74995160102844
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2693.1744899749756
----------
mutation rule: addVarDecl;
mutate pos: 680
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   680
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2693.617436647415
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 642
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 642
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2693.7197165489197
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2693.906390428543
----------
mutation rule: repIntConstant;*-1
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.089322328567505
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2741.040193796158
----------
mutation rule: add2Loop;
mutate pos: 896
mutate cmd: ./exefile/add2Loop-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.625118017196655
succeed? True
instantReward: 0.0
EndTime: 2789.798341989517
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2789.997909784317
----------
mutation rule: moveStmt;
mutate pos: 681
mutate cmd: ./exefile/moveStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2800.4591839313507
----------
mutation rule: repRemUnaryOp;post--,delete
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "delete" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2810.954878807068
----------
mutation rule: addVarDecl;
mutate pos: 681
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   681
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2811.4208624362946
----------
mutation rule: repIntConstant;*-1
mutate pos: 766
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.11765742301941
succeed? True
instantReward: 1.6998130205677375e-05
EndTime: 2859.6246848106384
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.74397850036621
succeed? True
instantReward: 0.0
EndTime: 2906.695270061493
----------
mutation rule: repVarSameScope;
mutate pos: 689
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   689
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2906.7131023406982
----------
mutation rule: add2Loop;
mutate pos: 724
mutate cmd: ./exefile/add2Loop-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2917.4002447128296
----------
mutation rule: repIfCond;0
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.970449924468994
succeed? True
instantReward: 0.0
EndTime: 2965.3420300483704
----------
mutation rule: addWhile;
mutate pos: 758
mutate cmd: ./exefile/addWhile-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.9111065864563
succeed? True
instantReward: 3.399626041135475e-05
EndTime: 3013.341856479645
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.66892981529236
succeed? True
instantReward: 0.0
EndTime: 3061.007999420166
----------
mutation rule: add2If;
mutate pos: 907
mutate cmd: ./exefile/add2If-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.871185541152954
succeed? True
instantReward: 0.0
EndTime: 3111.076372385025
----------
mutation rule: addQualifier;volatile
mutate pos: 848
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 848
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.550742387771606
succeed? True
instantReward: 1.3323578690305725e-06
EndTime: 3159.6702806949615
----------
mutation rule: repIfCond;1
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.32733201980591
succeed? True
instantReward: 1.7032293227960212e-05
EndTime: 3209.076882123947
----------
mutation rule: addVarDecl;
mutate pos: 899
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   899
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.9039032459259
succeed? True
instantReward: 1.1604158149463271e-08
EndTime: 3257.0088284015656
----------
mutation rule: repLoopCond;1
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3257.0324182510376
----------
mutation rule: repLoopCond;!
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3257.1336538791656
----------
mutation rule: dupStmt;
mutate pos: 837
mutate cmd: ./exefile/dupStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3257.202094078064
----------
mutation rule: repBinaryOp;-,*
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "*" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 67.2383496761322
succeed? True
instantReward: 1.703258333191395e-05
EndTime: 3325.4211127758026
----------
mutation rule: addLoopIf;
mutate pos: 753
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.87462282180786
succeed? True
instantReward: 0.0
EndTime: 3373.68984913826
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3374.4488694667816
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 68.77903747558594
succeed? True
instantReward: 0.0
EndTime: 3444.262440919876
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.784507036209106
succeed? True
instantReward: 0.0
EndTime: 3492.037351846695
----------
mutation rule: TurnConstantVar;
mutate pos: 676
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3492.078057050705
----------
mutation rule: repBinaryExpr;
mutate pos: 776
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   776
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.94735765457153
succeed? True
instantReward: 0.0
EndTime: 3541.021696805954
----------
mutation rule: addGoto;
mutate pos: 885
mutate cmd: ./exefile/addGoto-mul ./main.c --   885 680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3551.538326740265
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3551.676111459732
----------
mutation rule: addLoopIf;
mutate pos: 841
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 66.2291350364685
succeed? True
instantReward: 1.703258333191395e-05
EndTime: 3619.454071521759
