----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 0.6478078365325928
----------
mutation rule: repBinaryExpr;
mutate pos: 907
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   907
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1.317033290863037
----------
mutation rule: repBinaryOp;>,==
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "==" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 161.53245520591736
succeed? True
instantReward: 1.59821000479463e-05
EndTime: 163.55040049552917
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 68.74548554420471
succeed? True
instantReward: 5.244477598012522e-07
EndTime: 233.1111376285553
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 233.13189482688904
----------
mutation rule: dupStmt;
mutate pos: 1141
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 233.15293955802917
----------
mutation rule: addQualifier;const
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 233.42901802062988
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 234.14879894256592
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.5344181060791
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 285.4157409667969
----------
mutation rule: repVarSameScope;
mutate pos: 880
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   880
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.0518958568573
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 336.2441375255585
----------
mutation rule: addVarDecl;
mutate pos: 772
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   772
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.07137322425842
succeed? True
instantReward: 0.0
EndTime: 385.16289615631104
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.50695586204529
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 434.57012701034546
----------
mutation rule: repVarSameScope;
mutate pos: 793
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   793
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.841347455978394
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 485.1151125431061
----------
mutation rule: remModifierQualifier;short
mutate pos: 759
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 759
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.247321367263794
succeed? True
instantReward: 0.0
EndTime: 536.2019293308258
----------
mutation rule: repVarSameScope;
mutate pos: 665
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   665
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 536.5134291648865
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 537.0553224086761
----------
mutation rule: addVarDecl;
mutate pos: 914
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   914
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.26893424987793
succeed? True
instantReward: 0.0
EndTime: 587.1608512401581
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.234649419784546
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 637.1432771682739
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.26722598075867
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 686.4866056442261
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.065195083618164
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 738.3473341464996
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.675228118896484
succeed? True
instantReward: 0.0
EndTime: 786.8211195468903
----------
mutation rule: TurnConstantVar;
mutate pos: 737
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.42233967781067
succeed? True
instantReward: 1.615691596788005e-05
EndTime: 837.9938139915466
----------
mutation rule: addRepModifier;signed
mutate pos: 967
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 967
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.63882756233215
succeed? True
instantReward: 0.0
EndTime: 888.5082995891571
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 888.5326490402222
----------
mutation rule: addWhile;
mutate pos: 914
mutate cmd: ./exefile/addWhile-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 899.0921311378479
----------
mutation rule: addLoopIf;
mutate pos: 1153
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.13360381126404
succeed? True
instantReward: 4.3754334232189575e-07
EndTime: 950.4441974163055
----------
mutation rule: addVarDecl;
mutate pos: 838
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   838
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.87227654457092
succeed? True
instantReward: 0.0
EndTime: 1002.2058651447296
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1002.5913145542145
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1003.2575235366821
----------
mutation rule: repVarSameScope;
mutate pos: 665
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   665
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1003.5904326438904
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 57.16174364089966
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1061.560123682022
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.6921284198761
succeed? True
instantReward: 0.0
EndTime: 1111.0720417499542
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1111.4196078777313
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.843875885009766
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1164.264464378357
----------
mutation rule: addRepModifier;signed
mutate pos: 759
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 759
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.76541471481323
succeed? True
instantReward: 0.0
EndTime: 1217.8441343307495
----------
mutation rule: remModifierQualifier;short
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 921
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.212897539138794
succeed? True
instantReward: 0.0
EndTime: 1268.8407893180847
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.84743118286133
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1319.4371457099915
----------
mutation rule: addRepModifier;long
mutate pos: 598
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 598
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.93051099777222
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1372.1418466567993
----------
mutation rule: add2If;
mutate pos: 1141
mutate cmd: ./exefile/add2If-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1372.3592789173126
----------
mutation rule: addWhile;
mutate pos: 914
mutate cmd: ./exefile/addWhile-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1382.9594960212708
----------
mutation rule: repIntConstant;+1
mutate pos: 900
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.70651912689209
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1431.5042533874512
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.438926696777344
succeed? True
instantReward: 0.0
EndTime: 1481.932374715805
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.16858410835266
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1531.917388677597
----------
mutation rule: TurnConstantVar;
mutate pos: 900
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.59873604774475
succeed? True
instantReward: 1.6196692635363857e-05
EndTime: 1581.378297328949
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1581.399403810501
----------
mutation rule: addRepModifier;short
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 512
pos_left_this_mutator: [4] ['512', '537', '575', '967']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.53133416175842
succeed? True
instantReward: 4.066576952322558e-07
EndTime: 1632.86137509346
----------
mutation rule: add2Loop;
mutate pos: 1141
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1633.0704929828644
----------
mutation rule: remModifierQualifier;long
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "long" 537
pos_left_this_mutator: [3] ['537', '575', '967']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.2096791267395
succeed? True
instantReward: 1.6219284729543428e-05
EndTime: 1683.5438523292542
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1683.7684044837952
----------
mutation rule: addWhile;
mutate pos: 1153
mutate cmd: ./exefile/addWhile-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.79020810127258
succeed? True
instantReward: 0.0
EndTime: 1733.6869678497314
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.99087166786194
succeed? True
instantReward: 4.4047369642495615e-07
EndTime: 1782.9773206710815
----------
mutation rule: add2Loop;
mutate pos: 1141
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1783.1895785331726
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.96924018859863
succeed? True
instantReward: 1.6242467555671058e-05
EndTime: 1833.224061012268
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1833.44784283638
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1834.0761723518372
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.74701428413391
succeed? True
instantReward: 0.0
EndTime: 1883.7475402355194
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1883.76651597023
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1883.7852854728699
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1883.8798615932465
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1883.8992025852203
----------
mutation rule: repBinaryExpr;
mutate pos: 1031
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1031
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.0710883140564
succeed? True
instantReward: 0.0
EndTime: 1933.8442935943604
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1933.918447971344
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1934.1448242664337
----------
mutation rule: addGoto;
mutate pos: 914
mutate cmd: ./exefile/addGoto-mul ./main.c --   914 800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1934.5401499271393
----------
mutation rule: addRepModifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.61056447029114
succeed? True
instantReward: 1.6242467555671058e-05
EndTime: 1986.0241544246674
----------
mutation rule: remModifierQualifier;long
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "long" 537
pos_left_this_mutator: [3] ['537', '575', '967']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1986.0587475299835
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1986.0774309635162
----------
mutation rule: repVarSameScope;
mutate pos: 820
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   820
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1986.0934426784515
----------
mutation rule: repBinaryOp;-,+
mutate pos: 994
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 994
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.558127880096436
succeed? True
instantReward: 0.0
EndTime: 2036.4496459960938
----------
mutation rule: addVarDecl;
mutate pos: 1153
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1153
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.56556534767151
succeed? True
instantReward: 0.0
EndTime: 2086.9479308128357
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.907002687454224
succeed? True
instantReward: 0.0
EndTime: 2136.7360742092133
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.2793550491333
succeed? True
instantReward: 0.0
EndTime: 2186.8176007270813
----------
mutation rule: TurnConstantVar;
mutate pos: 824
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.622236490249634
succeed? True
instantReward: 0.0
EndTime: 2236.383626937866
----------
mutation rule: dupStmt;
mutate pos: 1145
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2236.4056079387665
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.20163941383362
succeed? True
instantReward: 3.28903375551294e-06
EndTime: 2286.5358254909515
----------
mutation rule: addWhile;
mutate pos: 1153
mutate cmd: ./exefile/addWhile-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.335121870040894
succeed? True
instantReward: 0.0
EndTime: 2336.96537399292
----------
mutation rule: moveStmt;
mutate pos: 1145
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.258766412734985
succeed? True
instantReward: 0.0
EndTime: 2385.104977607727
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2385.902130126953
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2386.0353689193726
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2386.057034254074
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2386.188577890396
----------
mutation rule: repIntConstant;-1
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.24660134315491
succeed? True
instantReward: 0.0
EndTime: 2436.3200209140778
----------
mutation rule: repIntConstant;*0
mutate pos: 824
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2436.3392808437347
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.67089223861694
succeed? True
instantReward: 1.6399088210695486e-05
EndTime: 2487.7698514461517
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2487.9947378635406
----------
mutation rule: repBinaryOp;^,&
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "&" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 52.39583683013916
succeed? True
instantReward: 1.6399088210695486e-05
EndTime: 2541.5043988227844
----------
mutation rule: addVarDecl;
mutate pos: 914
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   914
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2541.6581790447235
----------
mutation rule: repBinaryExpr;
mutate pos: 838
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   838
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.66295528411865
succeed? True
instantReward: 0.0
EndTime: 2590.2602033615112
----------
mutation rule: repIntConstant;-1
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.6605589389801
succeed? True
instantReward: 3.9008271746825227e-07
EndTime: 2643.8395867347717
----------
mutation rule: moveStmt;
mutate pos: 914
mutate cmd: ./exefile/moveStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.092318058013916
succeed? True
instantReward: 1.641604832884628e-05
EndTime: 2692.8208186626434
----------
mutation rule: addQualifier;restrict
mutate pos: 598
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 598
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2693.257239818573
----------
mutation rule: TurnConstantVar;
mutate pos: 737
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2693.3500185012817
----------
mutation rule: repVarSameScope;
mutate pos: 980
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   980
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2693.366961956024
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 921
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.27315425872803
succeed? True
instantReward: 1.641604832884628e-05
EndTime: 2742.689632177353
----------
mutation rule: repBinaryExpr;
mutate pos: 1031
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1031
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2742.877362728119
----------
mutation rule: remModifierQualifier;short
mutate pos: 759
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 759
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2742.9980475902557
----------
mutation rule: addRepModifier;short
mutate pos: 967
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 967
pos_left_this_mutator: [4] ['512', '537', '575', '967']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.695204973220825
succeed? True
instantReward: 0.0
EndTime: 2793.590176820755
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2794.0343215465546
----------
mutation rule: addLoopIf;
mutate pos: 1141
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2794.472375392914
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2794.9408683776855
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2795.63858628273
----------
mutation rule: addGoto;
mutate pos: 914
mutate cmd: ./exefile/addGoto-mul ./main.c --   914 1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2795.6598834991455
----------
mutation rule: moveStmt;
mutate pos: 838
mutate cmd: ./exefile/moveStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2796.1168723106384
----------
mutation rule: repIntConstant;*-1
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.139620780944824
succeed? True
instantReward: 0.0
EndTime: 2846.1970636844635
----------
mutation rule: addRepModifier;long
mutate pos: 652
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 652
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.76162075996399
succeed? True
instantReward: 2.0221456897536252e-07
EndTime: 2896.8901982307434
----------
mutation rule: add2Loop;
mutate pos: 838
mutate cmd: ./exefile/add2Loop-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.73285126686096
succeed? True
instantReward: 0.0
EndTime: 2946.8192830085754
----------
mutation rule: delStmt;
mutate pos: 914
mutate cmd: ./exefile/delStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.68532061576843
succeed? True
instantReward: 1.6424136911605294e-05
EndTime: 2996.4227643013
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2996.4463045597076
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2996.66827249527
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.394598722457886
succeed? True
instantReward: 1.6424136911605294e-05
EndTime: 3046.9643819332123
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.376036643981934
succeed? True
instantReward: 2.1131668011546874e-07
EndTime: 3097.3413846492767
----------
mutation rule: dupStmt;
mutate pos: 838
mutate cmd: ./exefile/dupStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3097.8002212047577
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.01199650764465
succeed? True
instantReward: 8.020729622701742e-08
EndTime: 3146.8898146152496
----------
mutation rule: moveStmt;
mutate pos: 800
mutate cmd: ./exefile/moveStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3147.4055948257446
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 553
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 553
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.87886142730713
succeed? True
instantReward: 1.6434934095914274e-05
EndTime: 3196.427773952484
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3198.1331057548523
----------
mutation rule: delStmt;
mutate pos: 1145
mutate cmd: ./exefile/delStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3198.1580855846405
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.02640080451965
succeed? True
instantReward: 1.6434934095914274e-05
EndTime: 3248.35764837265
----------
mutation rule: repVarSameScope;
mutate pos: 634
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   634
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3248.8423731327057
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3249.877272605896
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3250.011309146881
----------
mutation rule: moveStmt;
mutate pos: 800
mutate cmd: ./exefile/moveStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3250.4784264564514
----------
mutation rule: addRepModifier;signed
mutate pos: 575
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 575
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.070438385009766
succeed? True
instantReward: 0.0
EndTime: 3301.553333759308
----------
mutation rule: repVarSameScope;
mutate pos: 820
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   820
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3302.024254798889
----------
mutation rule: repIntConstant;-1
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3302.125625371933
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3302.6122641563416
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3303.0658593177795
----------
mutation rule: repBinaryExpr;
mutate pos: 1031
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1031
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3303.3058218955994
----------
mutation rule: addVarDecl;
mutate pos: 800
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   800
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.38205337524414
succeed? True
instantReward: 0.0
EndTime: 3356.6373376846313
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.9062774181366
succeed? True
instantReward: 1.6434934095914274e-05
EndTime: 3406.3404290676117
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3406.80526137352
----------
mutation rule: add2Loop;
mutate pos: 1141
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3407.0336072444916
----------
mutation rule: repBinaryExpr;
mutate pos: 800
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   800
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.592591524124146
succeed? True
instantReward: 0.0
EndTime: 3456.628753185272
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3456.85196018219
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3457.0839173793793
----------
mutation rule: repBinaryOp;^,|
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "|" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 51.53983449935913
succeed? True
instantReward: 7.14115441805387e-07
EndTime: 3509.6760444641113
----------
mutation rule: addLoopIf;
mutate pos: 914
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.77158737182617
succeed? True
instantReward: 1.6458737943974455e-05
EndTime: 3559.792419910431
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3559.814284324646
----------
mutation rule: repVarSameScope;
mutate pos: 775
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   775
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.20188331604004
succeed? True
instantReward: 1.6458737943974455e-05
EndTime: 3608.984468460083
