----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 0.6637945175170898
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1.1683504581451416
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1.1937580108642578
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1.2155675888061523
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1.4945006370544434
----------
mutation rule: delStmt;
mutate pos: 800
mutate cmd: ./exefile/delStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2.1588220596313477
----------
mutation rule: addGoto;
mutate pos: 1153
mutate cmd: ./exefile/addGoto-mul ./main.c --   1153 838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2.4402287006378174
----------
mutation rule: repBinaryOp;^,|
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "|" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3.1226348876953125
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 4.198058843612671
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 68.42957091331482
succeed? True
instantReward: 1.59821000479463e-05
EndTime: 73.29923391342163
----------
mutation rule: add2Loop;
mutate pos: 800
mutate cmd: ./exefile/add2Loop-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 98.84203481674194
succeed? True
instantReward: 6.291762597290855e-08
EndTime: 173.1145281791687
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 173.13128328323364
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 173.89290690422058
----------
mutation rule: add2Loop;
mutate pos: 838
mutate cmd: ./exefile/add2Loop-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 174.7598147392273
----------
mutation rule: repBinaryExpr;
mutate pos: 800
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   800
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 175.42422699928284
----------
mutation rule: delStmt;
mutate pos: 914
mutate cmd: ./exefile/delStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.91921830177307
succeed? True
instantReward: 1.6003072589937268e-05
EndTime: 224.14729118347168
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.86306285858154
succeed? True
instantReward: 1.6003072589937268e-05
EndTime: 273.77000999450684
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.09560203552246
succeed? True
instantReward: 1.1027404912780268e-07
EndTime: 322.6378290653229
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.70760917663574
succeed? True
instantReward: 1.6025127399762828e-05
EndTime: 372.23913621902466
----------
mutation rule: remModifierQualifier;short
mutate pos: 621
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 621
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.04259371757507
succeed? True
instantReward: 7.704758594055173e-09
EndTime: 421.10123801231384
----------
mutation rule: remModifierQualifier;short
mutate pos: 759
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 759
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.70907664299011
succeed? True
instantReward: 0.0
EndTime: 470.6413023471832
----------
mutation rule: moveStmt;
mutate pos: 800
mutate cmd: ./exefile/moveStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 470.9314937591553
----------
mutation rule: repBinaryOp;|,&
mutate pos: 1052
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "|" "&" 1052
pos_left_this_mutator: [1] ['1052']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 46.92728066444397
succeed? True
instantReward: 1.602641152619517e-05
EndTime: 518.806455373764
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.12282752990723
succeed? True
instantReward: 1.978061884906244e-08
EndTime: 567.7631511688232
----------
mutation rule: addRepModifier;unsigned
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 512
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 568.4811265468597
----------
mutation rule: add2If;
mutate pos: 914
mutate cmd: ./exefile/add2If-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.285282611846924
succeed? True
instantReward: 1.602923732888789e-05
EndTime: 617.7634968757629
----------
mutation rule: addQualifier;volatile
mutate pos: 575
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 575
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.40459632873535
succeed? True
instantReward: 6.786712194805462e-08
EndTime: 669.0368893146515
----------
mutation rule: addLoopIf;
mutate pos: 800
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 670.1782245635986
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.89178681373596
succeed? True
instantReward: 1.6037720719131398e-05
EndTime: 720.8626680374146
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 721.4402306079865
----------
mutation rule: repIntConstant;*0
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 721.4574892520905
----------
mutation rule: TurnConstantVar;
mutate pos: 737
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 46.70265030860901
succeed? True
instantReward: 1.6037720719131398e-05
EndTime: 768.9400687217712
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 768.9669723510742
----------
mutation rule: repBinaryOp;>,<
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.16927194595337
succeed? True
instantReward: 1.6037720719131398e-05
EndTime: 818.0204873085022
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 818.0472676753998
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 818.0712900161743
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 818.9898386001587
----------
mutation rule: remModifierQualifier;short
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 921
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.8468976020813
succeed? True
instantReward: 0.0
EndTime: 867.5336322784424
----------
mutation rule: delStmt;
mutate pos: 1145
mutate cmd: ./exefile/delStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 867.5522992610931
----------
mutation rule: repIntConstant;*0
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 867.5721001625061
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 867.9514563083649
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.135570764541626
succeed? True
instantReward: 1.6037720719131398e-05
EndTime: 917.0421624183655
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 917.2581851482391
----------
mutation rule: addQualifier;restrict
mutate pos: 598
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 598
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 917.5933303833008
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 918.2087953090668
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 918.2338478565216
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 918.7057459354401
----------
mutation rule: repBinaryOp;-,%
mutate pos: 1019
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "%" 1019
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.76320219039917
succeed? True
instantReward: 1.6037720719131398e-05
EndTime: 967.3079755306244
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.667351484298706
succeed? True
instantReward: 1.6037720719131398e-05
EndTime: 1016.7716279029846
----------
mutation rule: delStmt;
mutate pos: 914
mutate cmd: ./exefile/delStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1016.8234784603119
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1017.7581808567047
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1017.7789130210876
----------
mutation rule: addVarDecl;
mutate pos: 838
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   838
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.63861083984375
succeed? True
instantReward: 0.0
EndTime: 1066.2373189926147
----------
mutation rule: TurnConstantVar;
mutate pos: 824
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.52533960342407
succeed? True
instantReward: 1.5494636290989744e-07
EndTime: 1114.7238309383392
----------
mutation rule: TurnConstantVar;
mutate pos: 900
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.25452423095703
succeed? True
instantReward: 1.6048788316482106e-05
EndTime: 1163.8111124038696
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1164.0359859466553
----------
mutation rule: delStmt;
mutate pos: 800
mutate cmd: ./exefile/delStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.691452741622925
succeed? True
instantReward: 2.368186597435625e-06
EndTime: 1212.5459201335907
----------
mutation rule: repBinaryExpr;
mutate pos: 800
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   800
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.81373834609985
succeed? True
instantReward: 0.0
EndTime: 1261.2300782203674
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1261.8104474544525
----------
mutation rule: repBinaryOp;>>,<<
mutate pos: 954
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">>" "<<" 954
pos_left_this_mutator: [1] ['954']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.256699562072754
succeed? True
instantReward: 1.6206667422977813e-05
EndTime: 1311.838110923767
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.14065408706665
succeed? True
instantReward: 1.6206667422977813e-05
EndTime: 1363.0779416561127
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1363.0992028713226
----------
mutation rule: addQualifier;restrict
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 512
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1363.5122933387756
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.445122957229614
succeed? True
instantReward: 0.0
EndTime: 1413.8878293037415
----------
mutation rule: repBinaryOp;>>,<<
mutate pos: 954
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">>" "<<" 954
pos_left_this_mutator: [1] ['954']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1413.9319944381714
----------
mutation rule: addWhile;
mutate pos: 838
mutate cmd: ./exefile/addWhile-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.88125419616699
succeed? True
instantReward: 1.7861770608320737e-08
EndTime: 1462.9186608791351
----------
mutation rule: repBinaryOp;-,*
mutate pos: 994
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "*" 994
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.15294599533081
succeed? True
instantReward: 0.0
EndTime: 1511.9221968650818
----------
mutation rule: addRepModifier;long
mutate pos: 598
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 598
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.89583706855774
succeed? True
instantReward: 1.6207718115366538e-05
EndTime: 1561.6583108901978
----------
mutation rule: addVarDecl;
mutate pos: 1141
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1141
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1561.6812455654144
----------
mutation rule: TurnConstantVar;
mutate pos: 824
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1561.8074269294739
----------
mutation rule: add2Loop;
mutate pos: 1145
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.616270303726196
succeed? True
instantReward: 1.6207718115366538e-05
EndTime: 1611.523431777954
----------
mutation rule: repIntConstant;*0
mutate pos: 737
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.073357343673706
succeed? True
instantReward: 1.7978494706567903e-07
EndTime: 1661.454283952713
----------
mutation rule: repBinaryOp;^,&
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "&" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.6838698387146
succeed? True
instantReward: 1.6217180481001574e-05
EndTime: 1710.9877841472626
----------
mutation rule: dupStmt;
mutate pos: 1145
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1711.0075652599335
----------
mutation rule: addVarDecl;
mutate pos: 1145
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1145
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.95116138458252
succeed? True
instantReward: 0.0
EndTime: 1760.901426076889
----------
mutation rule: addVarDecl;
mutate pos: 914
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   914
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.483057737350464
succeed? True
instantReward: 0.0
EndTime: 1809.3046147823334
----------
mutation rule: delStmt;
mutate pos: 1153
mutate cmd: ./exefile/delStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.58732318878174
succeed? True
instantReward: 1.7451191230594978e-06
EndTime: 1858.8176703453064
----------
mutation rule: addWhile;
mutate pos: 1141
mutate cmd: ./exefile/addWhile-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1859.040867805481
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1859.162297487259
----------
mutation rule: dupStmt;
mutate pos: 838
mutate cmd: ./exefile/dupStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1859.5464866161346
----------
mutation rule: repIntConstant;*-1
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.66000318527222
succeed? True
instantReward: 0.0
EndTime: 1908.1494863033295
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1908.275029182434
----------
mutation rule: addGoto;
mutate pos: 800
mutate cmd: ./exefile/addGoto-mul ./main.c --   800 1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1908.2988793849945
----------
mutation rule: addWhile;
mutate pos: 1145
mutate cmd: ./exefile/addWhile-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1919.0158896446228
----------
mutation rule: add2Loop;
mutate pos: 1153
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.096516847610474
succeed? True
instantReward: 0.0
EndTime: 1968.2461252212524
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.37910509109497
succeed? True
instantReward: 1.630443643715455e-05
EndTime: 2018.6520109176636
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2018.87504696846
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2018.9005920886993
----------
mutation rule: addQualifier;const
mutate pos: 598
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 598
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.324161767959595
succeed? True
instantReward: 1.630443643715455e-05
EndTime: 2068.0612647533417
----------
mutation rule: add2Loop;
mutate pos: 838
mutate cmd: ./exefile/add2Loop-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.025978088378906
succeed? True
instantReward: 0.0
EndTime: 2118.1784517765045
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.177244663238525
succeed? True
instantReward: 0.0
EndTime: 2167.5135157108307
----------
mutation rule: addQualifier;restrict
mutate pos: 553
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 553
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2167.912082195282
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.983381032943726
succeed? True
instantReward: 0.0
EndTime: 2216.791932821274
----------
mutation rule: addLoopIf;
mutate pos: 1153
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.36292362213135
succeed? True
instantReward: -1.5963563231187786e-05
EndTime: 2266.494542360306
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2267.1421704292297
----------
mutation rule: repIntConstant;*0
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2267.1625695228577
----------
mutation rule: addRepModifier;signed
mutate pos: 682
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 682
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.233877182006836
succeed? True
instantReward: 0.0
EndTime: 2316.3128430843353
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.46172785758972
succeed? True
instantReward: 1.632066849458154e-05
EndTime: 2366.5904088020325
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2367.0213537216187
----------
mutation rule: addRepModifier;signed
mutate pos: 921
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 921
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.27778649330139
succeed? True
instantReward: 3.264133698916308e-05
EndTime: 2416.311220407486
----------
mutation rule: addLoopIf;
mutate pos: 1145
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.26274490356445
succeed? True
instantReward: 1.632066849458154e-05
EndTime: 2465.8952162265778
----------
mutation rule: addLoopIf;
mutate pos: 1153
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.59466242790222
succeed? True
instantReward: 5.334249083076932e-07
EndTime: 2517.8015768527985
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.86837887763977
succeed? True
instantReward: 3.868616232713265e-06
EndTime: 2567.623222589493
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.27652144432068
succeed? True
instantReward: 0.0
EndTime: 2616.8875861167908
----------
mutation rule: addVarDecl;
mutate pos: 1145
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1145
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2617.047151327133
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2617.186285495758
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.3195321559906
succeed? True
instantReward: 7.485284354217907e-08
EndTime: 2666.430790424347
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.609936475753784
succeed? True
instantReward: 3.299948850792813e-05
EndTime: 2715.8696308135986
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.12131309509277
succeed? True
instantReward: 1.6499744253964063e-05
EndTime: 2765.8521218299866
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2766.020383119583
----------
mutation rule: delStmt;
mutate pos: 800
mutate cmd: ./exefile/delStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2766.137709379196
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2766.5766339302063
----------
mutation rule: dupStmt;
mutate pos: 1145
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2766.59947347641
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.76190400123596
succeed? True
instantReward: 1.6499744253964063e-05
EndTime: 2817.187675714493
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2817.40838766098
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.730952501297
succeed? True
instantReward: 1.6499744253964063e-05
EndTime: 2867.0729191303253
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.52406907081604
succeed? True
instantReward: 0.0
EndTime: 2916.363290786743
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 51.29228162765503
succeed? True
instantReward: 0.0
EndTime: 2968.6567084789276
----------
mutation rule: moveStmt;
mutate pos: 1153
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2969.1305932998657
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.405704498291016
succeed? True
instantReward: 0.0
EndTime: 3018.949919939041
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3019.09095621109
----------
mutation rule: addQualifier;restrict
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3019.559618473053
----------
mutation rule: repBinaryExpr;
mutate pos: 994
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   994
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.4460232257843
succeed? True
instantReward: 0.0
EndTime: 3068.9904069900513
----------
mutation rule: addQualifier;const
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3069.6423664093018
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.55473852157593
succeed? True
instantReward: 1.6499744253964063e-05
EndTime: 3120.09743142128
----------
mutation rule: add2Loop;
mutate pos: 800
mutate cmd: ./exefile/add2Loop-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.7138729095459
succeed? True
instantReward: 0.0
EndTime: 3169.0545749664307
----------
mutation rule: add2Loop;
mutate pos: 1145
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.0319344997406
succeed? True
instantReward: 1.6499744253964063e-05
EndTime: 3218.1780717372894
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3219.297718524933
----------
mutation rule: repBinaryOp;-,/
mutate pos: 1019
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 1019
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.89782929420471
succeed? True
instantReward: 0.0
EndTime: 3268.1451966762543
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3268.172725200653
----------
mutation rule: addGoto;
mutate pos: 838
mutate cmd: ./exefile/addGoto-mul ./main.c --   838 1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3269.140360355377
----------
mutation rule: addWhile;
mutate pos: 1153
mutate cmd: ./exefile/addWhile-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 68.81768941879272
succeed? True
instantReward: 0.0
EndTime: 3339.198072910309
----------
mutation rule: repVarSameScope;
mutate pos: 1002
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1002
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.08693027496338
succeed? True
instantReward: 3.299948850792813e-05
EndTime: 3389.429393053055
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3389.924657344818
----------
mutation rule: add2If;
mutate pos: 800
mutate cmd: ./exefile/add2If-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.273698568344116
succeed? True
instantReward: 0.0
EndTime: 3439.4536662101746
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3439.9493820667267
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3440.1713013648987
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3440.191223859787
----------
mutation rule: addRepModifier;signed
mutate pos: 621
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 621
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3440.3933670520782
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.86048626899719
succeed? True
instantReward: 0.0
EndTime: 3491.668563604355
----------
mutation rule: addGoto;
mutate pos: 800
mutate cmd: ./exefile/addGoto-mul ./main.c --   800 838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 64.28749632835388
succeed? True
instantReward: 0.0
EndTime: 3556.972238779068
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3556.991532564163
----------
mutation rule: addWhile;
mutate pos: 1145
mutate cmd: ./exefile/addWhile-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.971928358078
succeed? True
instantReward: 0.0
EndTime: 3607.167826652527
