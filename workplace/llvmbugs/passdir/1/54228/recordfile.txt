----------
mutation rule: delStmt;
mutate pos: 1239
mutate cmd: ./exefile/delStmt-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 12.984558343887329
----------
mutation rule: addRepModifier;signed
mutate pos: 677
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 677
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 24.32903003692627
----------
mutation rule: moveStmt;
mutate pos: 1057
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 24.455548763275146
----------
mutation rule: repIfCond;1
mutate pos: 1231
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 165.41081070899963
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 190.71081471443176
----------
mutation rule: repIntConstant;*0
mutate pos: 1159
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 66.42722630500793
succeed? True
instantReward: 2.0169615142118398e-08
EndTime: 267.93057227134705
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 268.19481778144836
----------
mutation rule: add2If;
mutate pos: 1227
mutate cmd: ./exefile/add2If-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 268.4235441684723
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 278.97883582115173
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 279.0014741420746
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 279.0220830440521
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 289.8189790248871
----------
mutation rule: addVarDecl;
mutate pos: 846
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   846
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 300.3999524116516
----------
mutation rule: optOff;
mutate pos: 1045
mutate cmd: ./exefile/optOff-mul ./main.c --   1045
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 310.9666163921356
----------
mutation rule: repLoopVar;2
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 311.07252645492554
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 311.3247847557068
----------
mutation rule: delIf;
mutate pos: 946
mutate cmd: ./exefile/delIf-mul ./main.c --   946
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 311.34377908706665
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 321.90095353126526
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 332.443541765213
----------
mutation rule: add2Loop;
mutate pos: 942
mutate cmd: ./exefile/add2Loop-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 343.2479021549225
----------
mutation rule: disableLoopVect;
mutate pos: 846
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 353.8165714740753
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 354.3233151435852
----------
mutation rule: addQualifier;volatile
mutate pos: 677
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 677
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 364.8859145641327
----------
mutation rule: addGoto;
mutate pos: 1014
mutate cmd: ./exefile/addGoto-mul ./main.c --   1014 1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 364.91042041778564
----------
mutation rule: addVarDecl;
mutate pos: 842
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   842
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 365.18004298210144
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 365.2064745426178
----------
mutation rule: delStmt;
mutate pos: 1227
mutate cmd: ./exefile/delStmt-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 365.2291705608368
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 365.7198486328125
----------
mutation rule: delIf;
mutate pos: 946
mutate cmd: ./exefile/delIf-mul ./main.c --   946
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 365.7425129413605
----------
mutation rule: addGoto;
mutate pos: 1057
mutate cmd: ./exefile/addGoto-mul ./main.c --   1057 842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 376.0352087020874
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 376.55882573127747
----------
mutation rule: repBinaryExpr;
mutate pos: 1166
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1166
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 387.11896300315857
----------
mutation rule: addGoto;
mutate pos: 1049
mutate cmd: ./exefile/addGoto-mul ./main.c --   1049 1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 387.14780259132385
----------
mutation rule: repRemUnaryOp;post++,post--
mutate pos: 1041
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "post--" 1041
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.72428870201111
succeed? True
instantReward: 1.2808853479525048e-05
EndTime: 435.6828007698059
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 435.947851896286
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 436.2159550189972
----------
mutation rule: addIf;
mutate pos: 1090
mutate cmd: ./exefile/addIf-mul ./main.c --   1090
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 436.6893084049225
----------
mutation rule: repBinaryOp;!=,==
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" "==" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.68602681159973
succeed? True
instantReward: 3.937904099253985e-09
EndTime: 496.21566343307495
----------
mutation rule: delIf;
mutate pos: 1094
mutate cmd: ./exefile/delIf-mul ./main.c --   1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 506.86493587493896
----------
mutation rule: repBinaryOp;!=,>
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" ">" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 517.427565574646
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 528.7681150436401
----------
mutation rule: repLoopVar;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 528.8774588108063
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 528.8979799747467
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 529.172324180603
----------
mutation rule: dupStmt;
mutate pos: 1044
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 539.7397210597992
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.306663274765015
succeed? True
instantReward: 1.2809837955549862e-05
EndTime: 588.8285548686981
----------
mutation rule: repRemUnaryOp;post++,pre--
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre--" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 599.2138323783875
----------
mutation rule: disableLoopUnroll;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 599.4975669384003
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 599.5247941017151
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 599.804943561554
----------
mutation rule: add2If;
mutate pos: 1087
mutate cmd: ./exefile/add2If-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.02679419517517
succeed? True
instantReward: 6.246599978324273e-07
EndTime: 659.8328146934509
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 670.4133212566376
----------
mutation rule: repIfCond;0
mutate pos: 938
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 681.007926940918
----------
mutation rule: repBinaryOp;<,>
mutate pos: 820
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" ">" 820
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 691.6839439868927
----------
mutation rule: addGoto;
mutate pos: 1227
mutate cmd: ./exefile/addGoto-mul ./main.c --   1227 938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 691.707941532135
----------
mutation rule: optOff;
mutate pos: 1061
mutate cmd: ./exefile/optOff-mul ./main.c --   1061
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 702.2857942581177
----------
mutation rule: repRemUnaryOp;post++,post--
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "post--" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 715.9525098800659
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 726.529114484787
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 737.1153814792633
----------
mutation rule: addWhile;
mutate pos: 1061
mutate cmd: ./exefile/addWhile-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 747.6349580287933
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.92173957824707
succeed? True
instantReward: 1.2934769955116349e-05
EndTime: 796.3264317512512
----------
mutation rule: repLoopCond;0
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.77368664741516
succeed? True
instantReward: 3.0072857874606387e-06
EndTime: 857.8554635047913
----------
mutation rule: disableLoopVect;
mutate pos: 942
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 868.4401574134827
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 868.6905777454376
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 868.7138497829437
----------
mutation rule: addIf;
mutate pos: 1227
mutate cmd: ./exefile/addIf-mul ./main.c --   1227
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 868.943689584732
----------
mutation rule: repVarSameScope;
mutate pos: 1138
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1138
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 869.2316341400146
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 869.5150837898254
----------
mutation rule: TurnConstantVar;
mutate pos: 813
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   813
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 880.0943489074707
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.76076626777649
succeed? True
instantReward: 1.3435984253026456e-05
EndTime: 931.6110422611237
----------
mutation rule: delStmt;
mutate pos: 1057
mutate cmd: ./exefile/delStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 931.6316030025482
----------
mutation rule: TurnConstantVar;
mutate pos: 1235
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.27995586395264
succeed? True
instantReward: 1.643070614435534e-08
EndTime: 991.6744091510773
----------
mutation rule: TurnConstantVar;
mutate pos: 954
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 58.00586175918579
succeed? True
instantReward: 1.3438331496761362e-05
EndTime: 1050.4749615192413
----------
mutation rule: dupStmt;
mutate pos: 927
mutate cmd: ./exefile/dupStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1050.494560956955
----------
mutation rule: addRepModifier;signed
mutate pos: 713
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.69705152511597
succeed? True
instantReward: 0.0
EndTime: 1109.8851351737976
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1110.215823173523
----------
mutation rule: repLoopVar;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1110.3260793685913
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1120.9203748703003
----------
mutation rule: delStmt;
mutate pos: 1087
mutate cmd: ./exefile/delStmt-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1131.612461090088
----------
mutation rule: repLoopVar;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1131.7188112735748
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 52.95119881629944
succeed? True
instantReward: 1.3438331496761362e-05
EndTime: 1185.4231445789337
----------
mutation rule: repLoopCond;!
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.40276646614075
succeed? True
instantReward: 0.0
EndTime: 1245.6046917438507
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1245.9097619056702
----------
mutation rule: delStmt;
mutate pos: 942
mutate cmd: ./exefile/delStmt-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1245.9312880039215
----------
mutation rule: delIf;
mutate pos: 1049
mutate cmd: ./exefile/delIf-mul ./main.c --   1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.529712438583374
succeed? True
instantReward: 1.3438331496761362e-05
EndTime: 1295.2711064815521
----------
mutation rule: addRepModifier;long
mutate pos: 693
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 51.75938606262207
succeed? True
instantReward: 4.384506582290348e-07
EndTime: 1357.7913937568665
----------
mutation rule: addGoto;
mutate pos: 1014
mutate cmd: ./exefile/addGoto-mul ./main.c --   1014 1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1357.8136739730835
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1368.4998168945312
----------
mutation rule: repIfCond;!
mutate pos: 1049
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.76739192008972
succeed? True
instantReward: 1.3482176562584264e-05
EndTime: 1419.0911486148834
----------
mutation rule: repRemUnaryOp;post++,post--
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "post--" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1429.4274609088898
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.85814309120178
succeed? True
instantReward: 0.0
EndTime: 1490.0792446136475
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1490.0990784168243
----------
mutation rule: addWhile;
mutate pos: 1239
mutate cmd: ./exefile/addWhile-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1500.926537513733
----------
mutation rule: addLoopIf;
mutate pos: 1239
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1511.9299335479736
----------
mutation rule: repLoopVar;2
mutate pos: 942
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1512.0418095588684
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.42861604690552
succeed? True
instantReward: 0.0
EndTime: 1560.2480046749115
----------
mutation rule: addWhile;
mutate pos: 1057
mutate cmd: ./exefile/addWhile-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1570.8022067546844
----------
mutation rule: addRepModifier;signed
mutate pos: 786
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 786
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.6924843788147
succeed? True
instantReward: 0.0
EndTime: 1631.2260167598724
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1641.867629289627
----------
mutation rule: addQualifier;volatile
mutate pos: 786
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 786
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.19788932800293
succeed? True
instantReward: 1.3482176562584264e-05
EndTime: 1690.8723487854004
----------
mutation rule: addWhile;
mutate pos: 946
mutate cmd: ./exefile/addWhile-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1701.421603679657
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1701.4433226585388
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1702.0043530464172
----------
mutation rule: TurnConstantVar;
mutate pos: 813
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   813
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.33428192138672
succeed? True
instantReward: 6.731905656016029e-06
EndTime: 1760.122470855713
----------
mutation rule: optOff;
mutate pos: 1061
mutate cmd: ./exefile/optOff-mul ./main.c --   1061
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1770.7392880916595
----------
mutation rule: addWhile;
mutate pos: 846
mutate cmd: ./exefile/addWhile-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1781.299119234085
----------
mutation rule: addQualifier;restrict
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 766
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1781.645093202591
----------
mutation rule: addIf;
mutate pos: 938
mutate cmd: ./exefile/addIf-mul ./main.c --   938
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1782.1805412769318
----------
mutation rule: addIf;
mutate pos: 1045
mutate cmd: ./exefile/addIf-mul ./main.c --   1045
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1782.7276997566223
----------
mutation rule: disableLoopVect;
mutate pos: 942
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1793.4339849948883
----------
mutation rule: repLoopVar;2
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1793.5515382289886
----------
mutation rule: addVarDecl;
mutate pos: 942
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   942
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1793.89488697052
----------
mutation rule: addVarDecl;
mutate pos: 1227
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1227
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1793.9186384677887
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1793.9404528141022
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1793.9624917507172
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1793.986988544464
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1794.0102474689484
----------
mutation rule: TurnConstantVar;
mutate pos: 799
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   799
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.83075499534607
succeed? True
instantReward: 2.80863374011712e-05
EndTime: 1843.6733243465424
----------
mutation rule: delIf;
mutate pos: 1094
mutate cmd: ./exefile/delIf-mul ./main.c --   1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.68446397781372
succeed? True
instantReward: 6.037349928045277e-07
EndTime: 1903.255277633667
----------
mutation rule: moveStmt;
mutate pos: 927
mutate cmd: ./exefile/moveStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1903.2754230499268
----------
mutation rule: repVarSameScope;
mutate pos: 987
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   987
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1903.297960281372
----------
mutation rule: add2If;
mutate pos: 1014
mutate cmd: ./exefile/add2If-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1903.5226624011993
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1903.6240601539612
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1914.2715516090393
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.39651608467102
succeed? True
instantReward: 1.4086292628643067e-05
EndTime: 1964.4610979557037
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1964.8135714530945
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.27710962295532
succeed? True
instantReward: 3.637403591191953e-07
EndTime: 2024.905791759491
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2024.927474975586
----------
mutation rule: addGoto;
mutate pos: 1044
mutate cmd: ./exefile/addGoto-mul ./main.c --   1044 1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.57218909263611
succeed? True
instantReward: 1.4110541985917679e-05
EndTime: 2075.363562107086
----------
mutation rule: addRepModifier;signed
mutate pos: 856
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 856
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.099769830703735
succeed? True
instantReward: 0.0
EndTime: 2135.2693865299225
----------
mutation rule: addLoopIf;
mutate pos: 946
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.91221475601196
succeed? True
instantReward: 1.4110541985917679e-05
EndTime: 2185.392623901367
----------
mutation rule: repVarSameScope;
mutate pos: 965
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   965
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2195.772774219513
----------
mutation rule: addIf;
mutate pos: 938
mutate cmd: ./exefile/addIf-mul ./main.c --   938
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2196.339015483856
----------
mutation rule: addWhile;
mutate pos: 1083
mutate cmd: ./exefile/addWhile-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.88387656211853
succeed? True
instantReward: 0.0
EndTime: 2256.251036643982
----------
mutation rule: repBinaryExpr;
mutate pos: 1083
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1083
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2266.8922486305237
----------
mutation rule: repIntConstant;*-1
mutate pos: 954
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.58782172203064
succeed? True
instantReward: 1.4110541985917679e-05
EndTime: 2315.3121275901794
----------
mutation rule: add2If;
mutate pos: 1049
mutate cmd: ./exefile/add2If-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.947163343429565
succeed? True
instantReward: 1.4110541985917679e-05
EndTime: 2364.36176943779
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2364.7207539081573
----------
mutation rule: addRepModifier;signed
mutate pos: 677
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 677
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2364.8225615024567
----------
mutation rule: dupStmt;
mutate pos: 1087
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2365.1820995807648
----------
mutation rule: repVarSameScope;
mutate pos: 1037
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1037
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2365.1979804039
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.69108009338379
succeed? True
instantReward: 1.134960196988834e-08
EndTime: 2423.6864397525787
----------
mutation rule: repVarSameScope;
mutate pos: 890
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   890
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.89350986480713
succeed? True
instantReward: 0.0
EndTime: 2484.4072988033295
----------
mutation rule: addGoto;
mutate pos: 1014
mutate cmd: ./exefile/addGoto-mul ./main.c --   1014 1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2484.4275155067444
----------
mutation rule: addQualifier;restrict
mutate pos: 636
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 636
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2484.80450630188
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2484.828975915909
----------
mutation rule: disableLoopVect;
mutate pos: 846
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2495.493842124939
----------
mutation rule: repIntConstant;*0
mutate pos: 1235
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2495.965644836426
----------
mutation rule: addRepModifier;long
mutate pos: 693
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2496.1156754493713
----------
mutation rule: optOff;
mutate pos: 1045
mutate cmd: ./exefile/optOff-mul ./main.c --   1045
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2507.1413807868958
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2507.5197365283966
----------
mutation rule: TurnConstantVar;
mutate pos: 799
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   799
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2507.5496242046356
----------
mutation rule: moveStmt;
mutate pos: 927
mutate cmd: ./exefile/moveStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2507.5713763237
----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2518.326534509659
----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2528.9852616786957
----------
mutation rule: addGoto;
mutate pos: 1239
mutate cmd: ./exefile/addGoto-mul ./main.c --   1239 1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2529.009970188141
----------
mutation rule: delStmt;
mutate pos: 1087
mutate cmd: ./exefile/delStmt-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2539.7904653549194
----------
mutation rule: addVarDecl;
mutate pos: 1231
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1231
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2550.476812839508
----------
mutation rule: dupStmt;
mutate pos: 1057
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2550.5007650852203
----------
mutation rule: add2If;
mutate pos: 842
mutate cmd: ./exefile/add2If-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2561.3781905174255
----------
mutation rule: addVarDecl;
mutate pos: 1227
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1227
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2561.4013311862946
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.66647267341614
succeed? True
instantReward: 1.4111139333389777e-05
EndTime: 2609.855548620224
----------
mutation rule: dupStmt;
mutate pos: 846
mutate cmd: ./exefile/dupStmt-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2610.2238681316376
----------
mutation rule: repIfCond;!
mutate pos: 1231
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 52.24188160896301
succeed? True
instantReward: 0.0
EndTime: 2673.4008157253265
----------
mutation rule: repIntConstant;+1
mutate pos: 1235
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2684.0694637298584
----------
mutation rule: addRepModifier;unsigned
mutate pos: 661
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2694.75594329834
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2694.8982305526733
----------
mutation rule: addLoopIf;
mutate pos: 1239
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2695.6724553108215
----------
mutation rule: addLoopIf;
mutate pos: 942
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.736793994903564
succeed? True
instantReward: 1.4111139333389777e-05
EndTime: 2744.6704635620117
----------
mutation rule: delLoop;
mutate pos: 846
mutate cmd: ./exefile/delLoop-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2745.09485411644
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2745.1198139190674
----------
mutation rule: repLoopCond;1
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.42343711853027
succeed? True
instantReward: 1.4111139333389777e-05
EndTime: 2795.414417028427
----------
mutation rule: add2If;
mutate pos: 1231
mutate cmd: ./exefile/add2If-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2796.0049827098846
----------
mutation rule: addLoopIf;
mutate pos: 1227
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2796.4169964790344
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2796.832366466522
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2796.857679605484
----------
mutation rule: addRepModifier;signed
mutate pos: 636
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2796.9909784793854
----------
mutation rule: disableLoopVect;
mutate pos: 942
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.31625699996948
succeed? True
instantReward: 0.0
EndTime: 2856.111855983734
----------
mutation rule: addLoopIf;
mutate pos: 842
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.83759379386902
succeed? True
instantReward: 0.0
EndTime: 2906.349755525589
----------
mutation rule: addIf;
mutate pos: 927
mutate cmd: ./exefile/addIf-mul ./main.c --   927
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2906.574423313141
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2906.596648454666
----------
mutation rule: delStmt;
mutate pos: 938
mutate cmd: ./exefile/delStmt-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2906.616452693939
----------
mutation rule: repIntConstant;+1
mutate pos: 976
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 976
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.73945617675781
succeed? True
instantReward: 0.0
EndTime: 2966.1279225349426
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2966.3754527568817
----------
mutation rule: add2Loop;
mutate pos: 1151
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2966.967118024826
----------
mutation rule: addRepModifier;long
mutate pos: 636
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2967.099992275238
----------
mutation rule: addRepModifier;short
mutate pos: 766
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 766
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.84168219566345
succeed? True
instantReward: 1.4111139333389777e-05
EndTime: 3016.8080275058746
----------
mutation rule: disableLoopUnroll;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3017.2086458206177
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.47329378128052
succeed? True
instantReward: 0.0
EndTime: 3076.5681042671204
----------
mutation rule: delStmt;
mutate pos: 1049
mutate cmd: ./exefile/delStmt-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3076.661577939987
----------
mutation rule: repLoopVar;2
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3076.7713499069214
----------
mutation rule: delIf;
mutate pos: 1094
mutate cmd: ./exefile/delIf-mul ./main.c --   1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3076.930430650711
----------
mutation rule: repRemUnaryOp;post++,post--
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "post--" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3087.347220182419
----------
mutation rule: disableLoopUnroll;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3087.7688274383545
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3088.176155090332
----------
mutation rule: addLoopIf;
mutate pos: 1044
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.571513175964355
succeed? True
instantReward: 1.4111139333389777e-05
EndTime: 3136.968332529068
----------
mutation rule: addRepModifier;unsigned
mutate pos: 636
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.31563687324524
succeed? True
instantReward: 8.239848242882564e-07
EndTime: 3195.1435408592224
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.31464672088623
succeed? True
instantReward: 0.0
EndTime: 3255.2849628925323
----------
mutation rule: optOff;
mutate pos: 1061
mutate cmd: ./exefile/optOff-mul ./main.c --   1061
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3265.9902291297913
----------
mutation rule: moveStmt;
mutate pos: 1057
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.7129442691803
succeed? True
instantReward: 1.4145472034401788e-05
EndTime: 3314.623602628708
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.18828296661377
succeed? True
instantReward: 6.003850499874605e-08
EndTime: 3375.70738363266
----------
mutation rule: moveStmt;
mutate pos: 846
mutate cmd: ./exefile/moveStmt-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3376.1230556964874
----------
mutation rule: repLoopVar;2
mutate pos: 1045
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3376.2792308330536
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3376.3019964694977
----------
mutation rule: repLoopCond;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.96242332458496
succeed? True
instantReward: 1.4147873574601737e-05
EndTime: 3425.1778614521027
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3425.2974355220795
----------
mutation rule: addLoopIf;
mutate pos: 1227
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3425.716630220413
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3425.874447107315
----------
mutation rule: repBinaryOp;<,>
mutate pos: 961
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" ">" 961
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.589977979660034
succeed? True
instantReward: 1.4147873574601737e-05
EndTime: 3474.374856710434
----------
mutation rule: repIfCond;0
mutate pos: 938
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.664886474609375
succeed? True
instantReward: 3.895123386068143e-07
EndTime: 3535.924722671509
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3536.103188276291
----------
mutation rule: repIfCond;0
mutate pos: 1231
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.572585582733154
succeed? True
instantReward: 5.966245514015954e-07
EndTime: 3595.5510952472687
----------
mutation rule: addLoopIf;
mutate pos: 1049
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.81700372695923
succeed? True
instantReward: 0.0
EndTime: 3644.6750071048737
